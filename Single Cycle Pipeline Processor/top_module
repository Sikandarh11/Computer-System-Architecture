module top_module(    
	input clk,
	input clk2,
	input rst,
	output reg [6:0] seg_out,
	output reg [3:0] anode_sel,
	output[1:0]forwardA, 
	output[1:0]forwardB,
	output stall
);

	reg [1:0] display_select;
	reg [16:0] count;
	wire [15:0] num;

	wire [31:0] binary_number;

	datapath_pipeline uut (
        	.clk(clk2),
        	.rst(rst),
        	.pc(binary_number),
		.stall(stall),
		.forwardA(forwardA),
		.forwardB(forwardB)
  	);


	reg [6:0] seven_seg_data [0:15];

// Initialize seven_seg_data array
	initial begin
		seven_seg_data[0] = 7'b1000000; // 0
		seven_seg_data[1] = 7'b1111001; // 1
		seven_seg_data[2] = 7'b0100100; // 2
		seven_seg_data[3] = 7'b0110000; // 3
		seven_seg_data[4] = 7'b0011001; // 4
		seven_seg_data[5] = 7'b0010010; // 5
		seven_seg_data[6] = 7'b0000010; // 6
		seven_seg_data[7] = 7'b1111000; // 7
		seven_seg_data[8] = 7'b0000000; // 8
		seven_seg_data[9] = 7'b0010000; // 9
		seven_seg_data[10] = 7'b0001000;// 10
		seven_seg_data[11] = 7'b0000011;// 11
		seven_seg_data[12] = 7'b1000110; // 12
		seven_seg_data[13] = 7'b0100001; // 13
		seven_seg_data[14] = 7'b0000110; // 14
		seven_seg_data[15] = 7'b0001110; // 15
end

always @(posedge clk or posedge rst) begin
    if (rst) begin
        display_select <= 0;
		  count<=0;
		  end
		  else begin
		  count<=count+1;
		  if(count==100_000)
		  begin
		  count<=0; 
		  display_select <= (display_select == 3) ? 0 : (display_select + 1);
		  end
		  end
        case (display_select)
            0: begin
                seg_out <= seven_seg_data[binary_number[3:0]];
					 anode_sel = 4'b1110;
               
            end
            1: begin
               seg_out <= seven_seg_data[binary_number[7:4]];
					anode_sel = 4'b1101;
					
            end
            2: begin
                seg_out <= seven_seg_data[binary_number[11:8]];
					 anode_sel = 4'b1011;
					 
            end
            3: begin
                seg_out <= seven_seg_data[binary_number[15:12]];
					 anode_sel = 4'b0111;
            end
        endcase
		  
		  
end

endmodule
